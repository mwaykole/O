[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "rhoshift"
version = "0.1.7.3"
authors = [
    { name = "Milind Waykole" },
]
description = "RHOAI tool kit for managing and upgrading RHOAI"
readme = "README.md"
requires-python = ">=3.8"
license = { file = "LICENSE" }
keywords = ["rhoai", "openshift", "upgrade", "toolkit", "red hat"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
]
dependencies = [
    "boto3>=1.26.0,<1.39.0",
    "botocore>=1.29.0,<1.39.0",
    "kubernetes>=26.1.0,<34.0.0",
    "openshift-client>=1.0.2,<3.0.0",
    "python-dotenv>=1.0.0,<2.0.0",
    "requests>=2.31.0,<3.0.0",
    "urllib3>=1.26.0,<3.0.0",
    "colorlog>=6.7.0,<7.0.0",
    "pyfiglet>=0.8.post1,<2.0.0",
    "setuptools>=61.0,<76.0.0",
    "typing-extensions>=4.7.0,<5.0.0",
]

[tool.setuptools]
include-package-data = true
packages = [
    "rhoshift",
    "rhoshift.cli",
    "rhoshift.logger",
    "rhoshift.rhoai_upgrade_matrix",
    "rhoshift.utils",
    "rhoshift.utils.operator",
]

[tool.setuptools.package-data]
"rhoshift" = [
    "scripts/cleanup/*.sh",
    "scripts/run_upgrade_matrix.sh"
]

[project.scripts]
rhoshift = "rhoshift.main:main"
run-upgrade-matrix = "rhoshift.rhoai_upgrade_matrix.cli:main"

[project.urls]
"Homepage" = "https://github.com/mwaykole/O"
"Bug Tracker" = "https://github.com/mwaykole/O/issues"

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov",
]
dev = [
    "ruff",
    "pre-commit",
    "build",
    "black",
    "isort",
    "flake8",
    "mypy",
    "bandit",
    "pydocstyle",
]

# Tool configurations for pre-commit hooks
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
combine_as_imports = true
force_sort_within_sections = true
known_first_party = ["rhoshift"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
max-complexity = 10
exclude = [
    ".git",
    "__pycache__",
    "dist",
    "build",
    "*.egg-info",
    ".pytest_cache",
    ".venv",
    "venv"
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
no_strict_optional = true

[tool.bandit]
exclude_dirs = ["tests", "test_*"]
skips = ["B101", "B601"]

[tool.pydocstyle]
convention = "google"
add_ignore = ["D100", "D104", "D107"]
